<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gymmanage.gym.dao.BookMapper">
    <insert id="apply">
        insert into gym_book (start_time,end_time,place_id,name) values
        (#{startTime},#{endTime},#{placeId},#{name})
    </insert>
    <insert id="userApply">
        insert into gym_book (start_time,end_time,place_id,name,user_id) values
        (#{startTime},#{endTime},#{placeId},#{name},#{userId})
    </insert>
    <select id="selectAll" resultType="com.gymmanage.gym.entity.Book">
        select b.*,b.start_time as startTime, b.end_time as endTime, p.name as placeName, p.id as placeId
        from gym_book b
        left join gym_place p
        on b.place_id = p.id
        where b.is_cancel = #{isCancel}
        <if test="Order != null and Order != ''">
            order by b.${Order}
        </if>
    </select>
    <select id="getBookByPlaceId" resultType="com.gymmanage.gym.entity.Book">
        select *, start_time as startTime, end_time as endTime
        from gym_book
        where place_id = #{id} and is_cancel = 0 and is_arrive = 0 order by start_time limit 1
    </select>
    <select id="clientBookList" resultType="com.gymmanage.gym.entity.Book">
        select b.*,b.start_time as startTime, b.end_time as endTime, p.name as placeName, p.id as placeId
        from gym_book b
        left join gym_place p
        on b.place_id = p.id
        where b.user_id = #{userId}
        <if test="Order != null and Order != ''">
            order by b.${Order} desc
        </if>
    </select>
    <select id="isApply" resultType="java.lang.Integer">
        select count(*) from gym_book where place_id = #{placeId} and is_cancel=0 and is_arrive=0
    </select>
    <select id="checkApply" resultType="java.lang.String">
        select count(*) from gym_book where user_id = #{id} and is_cancel=0 and is_arrive=0
    </select>
    <update id="updPlace">
    update gym_place set state = 2 where id = #{id}
    </update>
    <update id="editApply">
        update gym_book
        set start_time = #{startTime},
        end_time = #{endTime},
        name = #{name}
        where id = #{id}
    </update>
    <update id="cancelApply1">
        update gym_book
        set is_cancel = 1
        where id = #{id}
    </update>

    <update id="cancelApply2">
        update gym_place
        set state = #{state}
        where id = #{placeId}
    </update>
    <update id="applyArrive">
        update gym_book
        set is_arrive = 1
        where id = #{id}
    </update>
</mapper>
